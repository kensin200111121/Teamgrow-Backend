const express = require('express');
const UserCtrl = require('../controllers/user');
const EmailCtrl = require('../controllers/email');
const ExtensionCtrl = require('../controllers/extension');
const { catchError } = require('../controllers/error');
const urls = require('../constants/urls');

const router = express.Router();

const redirectLink = (req, res) => {
  const newUrl = `${urls.MATERIAL_URL}${req.originalUrl}`;
  res.redirect(301, newUrl);
  // return res.render('redirection', { url: newUrl });
};
router.get('/video', catchError(redirectLink));
router.get('/embeded/video', catchError(redirectLink));
router.get('/video/:id', catchError(redirectLink)); // user video play
router.get('/video1/:id', catchError(redirectLink)); // trackable video link
router.get('/video4', catchError(redirectLink)); // video play sent via extension
router.get('/video5', catchError(redirectLink)); // video play sent via mobile
router.get('/video6/:id', catchError(redirectLink)); // video play generated by trackable link
router.get('/pdf', catchError(redirectLink)); // normal pdf
router.get('/pdf/:id', catchError(redirectLink)); // user pdf
router.get('/pdf1/:id', catchError(redirectLink)); // trackable pdf link
router.get('/pdf4', catchError(redirectLink)); // pdf sent via extension
router.get('/pdf5', catchError(redirectLink)); // image sent via mobile
router.get('/pdf6/:id', catchError(redirectLink)); // pdf generated by trackable link
router.get('/image', catchError(redirectLink)); // normal image
router.get('/image/:id', catchError(redirectLink)); // user image
router.get('/image1/:id', catchError(redirectLink)); // trackable image link
router.get('/image4', catchError(redirectLink)); // image sent via extension
router.get('/image5', catchError(redirectLink)); // image sent via mobile
router.get('/image6/:id', catchError(redirectLink)); // image generated by trackable link
router.get('/demo', catchError(redirectLink));
router.get('/unsubscribe', catchError(EmailCtrl.unSubscribePage));
router.get('/redirect', catchError(EmailCtrl.clickEmailLink));
router.get('/social-oauth/:social', catchError(UserCtrl.appSocial));
router.get('/social-oauth/:social/:source', catchError(UserCtrl.appSocial));
router.get(
  '/social-register/:social/:source',
  catchError(UserCtrl.appSocialRegister)
); // Social Sign up request
router.get(
  '/social-oauth-callback/:social',
  catchError(UserCtrl.appSocialCallback)
);
router.get(
  '/social-oauth-callback/:social/:source',
  catchError(UserCtrl.appSocialCallback)
);
router.get(
  '/social-register-callback/:social/:source',
  catchError(UserCtrl.appSocialRegisterCallback)
);
router.get(
  '/sync-social/:social/:action',
  catchError(UserCtrl.syncSocialRedirect)
);
router.get('/record', (req, res) => {
  res.render('record');
});
router.get(
  '/extension/create-template',
  catchError(ExtensionCtrl.extensionTemplate)
);

router.get('/auth', (req, res) => {
  res.render('auth');
});

module.exports = router;
